QUESTION: Zigzag Conversion

The string "PAYPALISHIRING" is written in a zigzag pattern on a given number of rows like this: (you may want to display this pattern in a fixed font for better legibility)

P   A   H   N
A P L S I I G
Y   I   R
And then read line by line: "PAHNAPLSIIGYIR"

Write the code that will take a string and make this conversion given a number of rows:

string convert(string s, int numRows);
 

Example 1:

Input: s = "PAYPALISHIRING", numRows = 3
Output: "PAHNAPLSIIGYIR"
Example 2:

Input: s = "PAYPALISHIRING", numRows = 4
Output: "PINALSIGYAHRPI"
Explanation:
P     I    N
A   L S  I G
Y A   H R
P     I
Example 3:

Input: s = "A", numRows = 1
Output: "A"
 

Constraints:

1 <= s.length <= 1000
s consists of English letters (lower-case and upper-case), ',' and '.'.
1 <= numRows <= 1000

SOLUTION:

class Solution {
     public String convert(String s, int numRows) {
        
        if(numRows == 1 || s.length() <= numRows ) return s;

		String result = "";

		for (int i = 1; i <= numRows; i++) {
			// first row

			if (i == 1) {
				int jump = 0;

				while (jump < s.length()) {
					result = result + s.charAt(jump);
					int next = (numRows - 2) * 2 + 1;
					jump = jump + next + 1; // nextelement
				}
			} else if (i != numRows) {

				boolean isJump = true;
				int jump = i - 1;
				result = result + s.charAt(jump);
				while (jump < s.length()) {
					if (isJump) {
						jump = jump + (numRows - i - 1) * 2 + 1 + 1;

						if (jump < s.length())
							result = result + s.charAt(jump);
						isJump = false;
					} else {
						jump = jump + (i - 1 - 1) * 2 + 1 + 1;

						if (jump < s.length())
							result = result + s.charAt(jump);
						isJump = true;
					}
				}
			}
			// last row
			else {
				int jump = i - 1;
				while (jump < s.length()) {
					result = result + s.charAt(jump);
					int next = (numRows - 2) * 2 + 1;
					jump = jump + next + 1; // nextelement
				}
			}

		}

		return result;
        
    }
}
